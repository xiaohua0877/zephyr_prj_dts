/dts-v1/;

/ {
	#address-cells = < 0x01 >;
	#size-cells = < 0x01 >;
	model = "STMicroelectronics STM32F723E DISCOVERY board";
	compatible = "st,stm32f723e-disco", "st,stm32f723";

	chosen {
		zephyr,console = "/soc/serial@40011400";
		zephyr,shell-uart = "/soc/serial@40011400";
		zephyr,sram = "/memory@20000000";
		zephyr,flash = "/soc/flash-controller@40023c00/flash@8000000";
	};

	aliases {
		led0 = "/leds/led_1";
		led1 = "/leds/led_2";
		led2 = "/leds/led_3";
		sw0 = "/gpio_keys/button";
	};

	soc {
		#address-cells = < 0x01 >;
		#size-cells = < 0x01 >;
		compatible = "simple-bus";
		interrupt-parent = < 0x01 >;
		ranges;

		nvic: interrupt-controller@e000e100 {
			compatible = "arm,v7m-nvic";
			reg = < 0xe000e100 0xc00 >;
			interrupt-controller;
			#interrupt-cells = < 0x02 >;
			arm,num-irq-priority-bits = < 0x04 >;
			phandle = < 0x01 >;
		};

		systick: timer@e000e010 {
			compatible = "arm,armv7m-systick";
			reg = < 0xe000e010 0x10 >;
			status = "disabled";
		};

		pinctrl: pin-controller@40020000 {
			compatible = "st,stm32-pinmux";
			#address-cells = < 0x01 >;
			#size-cells = < 0x01 >;
			reg = < 0x40020000 0x2400 >;

			usart1_pins_a: usart1_a {

				rx_tx {
					rx = < 0x17 0x27 >;
					tx = < 0x16 0x27 >;
				};
			};

			usart1_pins_b: usart1_b {

				rx_tx {
					rx = < 0x0a 0x27 >;
					tx = < 0x09 0x27 >;
				};
			};

			usart2_pins_a: usart2_a {

				rx_tx {
					rx = < 0x03 0x27 >;
					tx = < 0x02 0x27 >;
				};
			};

			usart2_pins_b: usart2_b {

				rx_tx {
					rx = < 0x36 0x27 >;
					tx = < 0x35 0x27 >;
				};
			};

			usart3_pins_a: usart3_a {

				rx_tx {
					rx = < 0x1b 0x27 >;
					tx = < 0x1a 0x27 >;
				};
			};

			usart3_pins_b: usart3_b {

				rx_tx {
					rx = < 0x39 0x27 >;
					tx = < 0x38 0x27 >;
				};
			};

			usart3_pins_c: usart3_c {

				rx_tx {
					rx = < 0x2b 0x27 >;
					tx = < 0x2a 0x27 >;
				};
			};

			uart4_pins_a: uart4_a {

				rx_tx {
					rx = < 0x01 0x28 >;
					tx = < 0x00 0x28 >;
				};
			};

			uart4_pins_b: uart4_b {

				rx_tx {
					rx = < 0x2b 0x28 >;
					tx = < 0x2a 0x28 >;
				};
			};

			uart5_pins_a: uart5_a {

				rx_tx {
					rx = < 0x32 0x28 >;
					tx = < 0x2c 0x28 >;
				};
			};

			usart6_pins_a: usart6_a {

				rx_tx {
					rx = < 0x27 0x28 >;
					tx = < 0x26 0x28 >;
				};
			};

			usart6_pins_b: usart6_b {

				rx_tx {
					rx = < 0x69 0x28 >;
					tx = < 0x6e 0x28 >;
				};
			};

			uart7_pins_a: uart7_a {

				rx_tx {
					rx = < 0x47 0x28 >;
					tx = < 0x48 0x28 >;
				};
			};

			uart7_pins_b: uart7_b {

				rx_tx {
					rx = < 0x56 0x28 >;
					tx = < 0x57 0x28 >;
				};
			};

			uart8_pins_a: uart8_a {

				rx_tx {
					rx = < 0x40 0x28 >;
					tx = < 0x41 0x28 >;
				};
			};

			gpioa: gpio@40020000 {
				compatible = "st,stm32-gpio";
				gpio-controller;
				#gpio-cells = < 0x02 >;
				reg = < 0x40020000 0x400 >;
				clocks = < 0x02 0x00 0x01 >;
				label = "GPIOA";
				phandle = < 0x05 >;
			};

			gpiob: gpio@40020400 {
				compatible = "st,stm32-gpio";
				gpio-controller;
				#gpio-cells = < 0x02 >;
				reg = < 0x40020400 0x400 >;
				clocks = < 0x02 0x00 0x02 >;
				label = "GPIOB";
				phandle = < 0x06 >;
			};

			gpioc: gpio@40020800 {
				compatible = "st,stm32-gpio";
				gpio-controller;
				#gpio-cells = < 0x02 >;
				reg = < 0x40020800 0x400 >;
				clocks = < 0x02 0x00 0x04 >;
				label = "GPIOC";
			};

			gpiod: gpio@40020C00 {
				compatible = "st,stm32-gpio";
				gpio-controller;
				#gpio-cells = < 0x02 >;
				reg = < 0x40020c00 0x400 >;
				clocks = < 0x02 0x00 0x08 >;
				label = "GPIOD";
			};

			gpioe: gpio@40021000 {
				compatible = "st,stm32-gpio";
				gpio-controller;
				#gpio-cells = < 0x02 >;
				reg = < 0x40021000 0x400 >;
				clocks = < 0x02 0x00 0x10 >;
				label = "GPIOE";
			};

			gpiof: gpio@40021400 {
				compatible = "st,stm32-gpio";
				gpio-controller;
				#gpio-cells = < 0x02 >;
				reg = < 0x40021400 0x400 >;
				clocks = < 0x02 0x00 0x20 >;
				label = "GPIOF";
			};

			gpiog: gpio@40021800 {
				compatible = "st,stm32-gpio";
				gpio-controller;
				#gpio-cells = < 0x02 >;
				reg = < 0x40021800 0x400 >;
				clocks = < 0x02 0x00 0x40 >;
				label = "GPIOG";
			};

			gpioh: gpio@40021C00 {
				compatible = "st,stm32-gpio";
				gpio-controller;
				#gpio-cells = < 0x02 >;
				reg = < 0x40021c00 0x400 >;
				clocks = < 0x02 0x00 0x80 >;
				label = "GPIOH";
			};

			gpioi: gpio@40022000 {
				compatible = "st,stm32-gpio";
				gpio-controller;
				#gpio-cells = < 0x02 >;
				reg = < 0x40022000 0x400 >;
				clocks = < 0x02 0x00 0x100 >;
				label = "GPIOI";
			};
		};

		flash-controller@40023c00 {
			compatible = "st,stm32f7-flash-controller";
			label = "FLASH_CTRL";
			reg = < 0x40023c00 0x400 >;
			interrupts = < 0x04 0x00 >;
			#address-cells = < 0x01 >;
			#size-cells = < 0x01 >;

			flash0: flash@8000000 {
				compatible = "soc-nv-flash";
				label = "FLASH_STM32";
				write-block-size = < 0x01 >;
				reg = < 0x8000000 0x80000 >;
			};
		};

		rcc: rcc@40023800 {
			compatible = "st,stm32-rcc";
			clocks-controller;
			#clock-cells = < 0x02 >;
			reg = < 0x40023800 0x400 >;
			label = "STM32_CLK_RCC";
			phandle = < 0x02 >;
		};

		idwg: watchdog@40003000 {
			compatible = "st,stm32-watchdog";
			reg = < 0x40003000 0x400 >;
			label = "IWDG";
			status = "disabled";
		};

		usart1: serial@40011000 {
			compatible = "st,stm32-usart", "st,stm32-uart";
			reg = < 0x40011000 0x400 >;
			clocks = < 0x02 0x03 0x10 >;
			interrupts = < 0x25 0x00 >;
			status = "disabled";
			label = "UART_1";
		};

		arduino_serial: usart2: serial@40004400 {
			compatible = "st,stm32-usart", "st,stm32-uart";
			reg = < 0x40004400 0x400 >;
			clocks = < 0x02 0x02 0x20000 >;
			interrupts = < 0x26 0x00 >;
			status = "ok";
			label = "UART_2";
			current-speed = < 0x1c200 >;
			pinctrl-names = "default";
		};

		usart3: serial@40004800 {
			compatible = "st,stm32-usart", "st,stm32-uart";
			reg = < 0x40004800 0x400 >;
			clocks = < 0x02 0x02 0x40000 >;
			interrupts = < 0x27 0x00 >;
			status = "disabled";
			label = "UART_3";
		};

		uart4: serial@40004c00 {
			compatible = "st,stm32-uart";
			reg = < 0x40004c00 0x400 >;
			clocks = < 0x02 0x02 0x80000 >;
			interrupts = < 0x34 0x00 >;
			status = "disabled";
			label = "UART_4";
		};

		uart5: serial@40005000 {
			compatible = "st,stm32-uart";
			reg = < 0x40005000 0x400 >;
			clocks = < 0x02 0x02 0x100000 >;
			interrupts = < 0x35 0x00 >;
			status = "disabled";
			label = "UART_5";
		};

		usart6: serial@40011400 {
			compatible = "st,stm32-usart", "st,stm32-uart";
			reg = < 0x40011400 0x400 >;
			clocks = < 0x02 0x03 0x20 >;
			interrupts = < 0x47 0x00 >;
			status = "ok";
			label = "UART_6";
			current-speed = < 0x1c200 >;
			pinctrl-names = "default";
		};

		uart7: serial@40007800 {
			compatible = "st,stm32-uart";
			reg = < 0x40007800 0x400 >;
			clocks = < 0x02 0x02 0x40000000 >;
			interrupts = < 0x52 0x00 >;
			status = "disabled";
			label = "UART_7";
		};

		uart8: serial@40007c00 {
			compatible = "st,stm32-uart";
			reg = < 0x40007c00 0x400 >;
			clocks = < 0x02 0x02 0x80000000 >;
			interrupts = < 0x53 0x00 >;
			status = "disabled";
			label = "UART_8";
		};

		i2c1: i2c@40005400 {
			compatible = "st,stm32-i2c-v2";
			clock-frequency = < 0x186a0 >;
			#address-cells = < 0x01 >;
			#size-cells = < 0x00 >;
			reg = < 0x40005400 0x400 >;
			clocks = < 0x02 0x02 0x200000 >;
			interrupts = < 0x1f 0x00 >, < 0x20 0x00 >;
			interrupt-names = "event", "error";
			status = "ok";
			label = "I2C_1";
		};

		arduino_i2c: i2c2: i2c@40005800 {
			compatible = "st,stm32-i2c-v2";
			clock-frequency = < 0x186a0 >;
			#address-cells = < 0x01 >;
			#size-cells = < 0x00 >;
			reg = < 0x40005800 0x400 >;
			clocks = < 0x02 0x02 0x400000 >;
			interrupts = < 0x21 0x00 >, < 0x22 0x00 >;
			interrupt-names = "event", "error";
			status = "ok";
			label = "I2C_2";
		};

		i2c3: i2c@40005c00 {
			compatible = "st,stm32-i2c-v2";
			clock-frequency = < 0x186a0 >;
			#address-cells = < 0x01 >;
			#size-cells = < 0x00 >;
			reg = < 0x40005c00 0x400 >;
			clocks = < 0x02 0x02 0x800000 >;
			interrupts = < 0x48 0x00 >, < 0x49 0x00 >;
			interrupt-names = "event", "error";
			status = "ok";
			label = "I2C_3";
		};

		arduino_spi: spi1: spi@40013000 {
			compatible = "st,stm32-spi";
			#address-cells = < 0x01 >;
			#size-cells = < 0x00 >;
			reg = < 0x40013000 0x400 >;
			clocks = < 0x02 0x03 0x1000 >;
			interrupts = < 0x23 0x05 >;
			status = "ok";
			label = "SPI_1";
		};

		spi2: spi@40003800 {
			compatible = "st,stm32-spi";
			#address-cells = < 0x01 >;
			#size-cells = < 0x00 >;
			reg = < 0x40003800 0x400 >;
			clocks = < 0x02 0x02 0x4000 >;
			interrupts = < 0x24 0x05 >;
			status = "disabled";
			label = "SPI_2";
		};

		spi3: spi@40003c00 {
			compatible = "st,stm32-spi";
			#address-cells = < 0x01 >;
			#size-cells = < 0x00 >;
			reg = < 0x40003c00 0x400 >;
			clocks = < 0x02 0x02 0x8000 >;
			interrupts = < 0x33 0x05 >;
			status = "disabled";
			label = "SPI_3";
		};

		spi4: spi@40013400 {
			compatible = "st,stm32-spi";
			#address-cells = < 0x01 >;
			#size-cells = < 0x00 >;
			reg = < 0x40013400 0x400 >;
			clocks = < 0x02 0x03 0x2000 >;
			interrupts = < 0x54 0x05 >;
			status = "disabled";
			label = "SPI_4";
		};

		spi5: spi@40015000 {
			compatible = "st,stm32-spi";
			#address-cells = < 0x01 >;
			#size-cells = < 0x00 >;
			reg = < 0x40015000 0x400 >;
			clocks = < 0x02 0x03 0x100000 >;
			interrupts = < 0x55 0x05 >;
			status = "disabled";
			label = "SPI_5";
		};

		spi6: spi@40015400 {
			compatible = "st,stm32-spi";
			#address-cells = < 0x01 >;
			#size-cells = < 0x00 >;
			reg = < 0x40015400 0x400 >;
			clocks = < 0x02 0x03 0x200000 >;
			interrupts = < 0x56 0x05 >;
			status = "disabled";
			label = "SPI_6";
		};

		timers1: timers@40010000 {
			compatible = "st,stm32-timers";
			reg = < 0x40010000 0x400 >;
			clocks = < 0x02 0x03 0x01 >;
			status = "disabled";
			label = "TIMERS_1";

			pwm {
				compatible = "st,stm32-pwm";
				status = "disabled";
				st,prescaler = < 0x2710 >;
				label = "PWM_1";
				#pwm-cells = < 0x02 >;
			};
		};

		timers2: timers@40000000 {
			compatible = "st,stm32-timers";
			reg = < 0x40000000 0x400 >;
			clocks = < 0x02 0x02 0x01 >;
			status = "disabled";
			label = "TIMERS_2";

			pwm {
				compatible = "st,stm32-pwm";
				status = "disabled";
				st,prescaler = < 0x00 >;
				label = "PWM_2";
				#pwm-cells = < 0x02 >;
			};
		};

		timers3: timers@40000400 {
			compatible = "st,stm32-timers";
			reg = < 0x40000400 0x400 >;
			clocks = < 0x02 0x02 0x02 >;
			status = "disabled";
			label = "TIMERS_3";

			pwm {
				compatible = "st,stm32-pwm";
				status = "disabled";
				st,prescaler = < 0x2710 >;
				label = "PWM_3";
				#pwm-cells = < 0x02 >;
			};
		};

		timers4: timers@40000800 {
			compatible = "st,stm32-timers";
			reg = < 0x40000800 0x400 >;
			clocks = < 0x02 0x02 0x04 >;
			status = "disabled";
			label = "TIMERS_4";

			pwm {
				compatible = "st,stm32-pwm";
				status = "disabled";
				st,prescaler = < 0x2710 >;
				label = "PWM_4";
				#pwm-cells = < 0x02 >;
			};
		};

		timers5: timers@40000c00 {
			compatible = "st,stm32-timers";
			reg = < 0x40000c00 0x400 >;
			clocks = < 0x02 0x02 0x08 >;
			status = "disabled";
			label = "TIMERS_5";

			pwm {
				compatible = "st,stm32-pwm";
				status = "disabled";
				st,prescaler = < 0x00 >;
				label = "PWM_5";
				#pwm-cells = < 0x02 >;
			};
		};

		timers6: timers@40001000 {
			compatible = "st,stm32-timers";
			reg = < 0x40001000 0x400 >;
			clocks = < 0x02 0x02 0x10 >;
			status = "disabled";
			label = "TIMERS_6";

			pwm {
				compatible = "st,stm32-pwm";
				status = "disabled";
				st,prescaler = < 0x2710 >;
				label = "PWM_6";
				#pwm-cells = < 0x02 >;
			};
		};

		timers7: timers@40001400 {
			compatible = "st,stm32-timers";
			reg = < 0x40001400 0x400 >;
			clocks = < 0x02 0x02 0x20 >;
			status = "disabled";
			label = "TIMERS_7";

			pwm {
				compatible = "st,stm32-pwm";
				status = "disabled";
				st,prescaler = < 0x2710 >;
				label = "PWM_7";
				#pwm-cells = < 0x02 >;
			};
		};

		timers8: timers@40010400 {
			compatible = "st,stm32-timers";
			reg = < 0x40010400 0x400 >;
			clocks = < 0x02 0x03 0x02 >;
			status = "disabled";
			label = "TIMERS_8";

			pwm {
				compatible = "st,stm32-pwm";
				status = "disabled";
				st,prescaler = < 0x2710 >;
				label = "PWM_8";
				#pwm-cells = < 0x02 >;
			};
		};

		timers9: timers@40014000 {
			compatible = "st,stm32-timers";
			reg = < 0x40014000 0x400 >;
			clocks = < 0x02 0x03 0x10000 >;
			status = "disabled";
			label = "TIMERS_9";

			pwm {
				compatible = "st,stm32-pwm";
				status = "disabled";
				st,prescaler = < 0x2710 >;
				label = "PWM_9";
				#pwm-cells = < 0x02 >;
			};
		};

		timers10: timers@40014400 {
			compatible = "st,stm32-timers";
			reg = < 0x40014400 0x400 >;
			clocks = < 0x02 0x03 0x20000 >;
			status = "disabled";
			label = "TIMERS_10";

			pwm {
				compatible = "st,stm32-pwm";
				status = "disabled";
				st,prescaler = < 0x2710 >;
				label = "PWM_10";
				#pwm-cells = < 0x02 >;
			};
		};

		timers11: timers@40014800 {
			compatible = "st,stm32-timers";
			reg = < 0x40014800 0x400 >;
			clocks = < 0x02 0x03 0x40000 >;
			status = "disabled";
			label = "TIMERS_11";

			pwm {
				compatible = "st,stm32-pwm";
				status = "disabled";
				st,prescaler = < 0x2710 >;
				label = "PWM_11";
				#pwm-cells = < 0x02 >;
			};
		};

		timers12: timers@40001800 {
			compatible = "st,stm32-timers";
			reg = < 0x40001800 0x400 >;
			clocks = < 0x02 0x02 0x40 >;
			status = "disabled";
			label = "TIMERS_12";

			pwm {
				compatible = "st,stm32-pwm";
				status = "disabled";
				st,prescaler = < 0x2710 >;
				label = "PWM_12";
				#pwm-cells = < 0x02 >;
			};
		};

		timers13: timers@40001c00 {
			compatible = "st,stm32-timers";
			reg = < 0x40001c00 0x400 >;
			clocks = < 0x02 0x02 0x80 >;
			status = "disabled";
			label = "TIMERS_13";

			pwm {
				compatible = "st,stm32-pwm";
				status = "disabled";
				st,prescaler = < 0x2710 >;
				label = "PWM_13";
				#pwm-cells = < 0x02 >;
			};
		};

		timers14: timers@40002000 {
			compatible = "st,stm32-timers";
			reg = < 0x40002000 0x400 >;
			clocks = < 0x02 0x02 0x100 >;
			status = "disabled";
			label = "TIMERS_14";

			pwm {
				compatible = "st,stm32-pwm";
				status = "disabled";
				st,prescaler = < 0x2710 >;
				label = "PWM_14";
				#pwm-cells = < 0x02 >;
			};
		};

		usbotg_fs: usb@50000000 {
			compatible = "st,stm32-otgfs";
			reg = < 0x50000000 0x40000 >;
			interrupts = < 0x43 0x00 >;
			interrupt-names = "otgfs";
			num-bidir-endpoints = < 0x06 >;
			ram-size = < 0x500 >;
			maximum-speed = "full-speed";
			phys = < 0x03 >;
			status = "ok";
			label = "OTGFS";
		};

		usbotg_hs: usb@40040000 {
			compatible = "st,stm32-otghs", "st,stm32-otgfs";
			reg = < 0x40040000 0x40000 >;
			interrupts = < 0x4d 0x00 >, < 0x4a 0x00 >, < 0x4b 0x00 >;
			interrupt-names = "otghs", "ep1_out", "ep1_in";
			num-bidir-endpoints = < 0x09 >;
			ram-size = < 0x1000 >;
			maximum-speed = "high-speed";
			phys = < 0x04 >;
			status = "disabled";
			label = "OTGHS";
		};

		rtc: rtc@40002800 {
			compatible = "st,stm32-rtc";
			reg = < 0x40002800 0x300 >;
			interrupts = < 0x29 0x00 >;
			clocks = < 0x02 0x02 0x10000000 >;
			prescaler = < 0x8000 >;
			status = "disabled";
			label = "RTC_0";
		};

		usbphyc: usbphyc@40017c00 {
			compatible = "st,stm32-usbphyc";
			reg = < 0x40017c00 0x400 >;
			#phy-cells = < 0x00 >;
			label = "USBPHYC";
			phandle = < 0x04 >;
		};
	};

	cpus {
		#address-cells = < 0x01 >;
		#size-cells = < 0x00 >;

		cpu@0 {
			device_type = "cpu";
			compatible = "arm,cortex-m7";
			reg = < 0x00 >;
		};
	};

	sram0: memory@20000000 {
		device_type = "memory";
		compatible = "mmio-sram";
		reg = < 0x20000000 0x40000 >;
	};

	otgfs_phy: otgfs_phy {
		compatible = "usb-nop-xceiv";
		#phy-cells = < 0x00 >;
		label = "OTGFS_PHY";
		phandle = < 0x03 >;
	};

	leds {
		compatible = "gpio-leds";

		blue_led: led_1 {
			gpios = < 0x05 0x05 0x04 >;
			label = "User LD1";
		};

		red_led: led_2 {
			gpios = < 0x05 0x07 0x04 >;
			label = "User LD5";
		};

		green_led: led_3 {
			gpios = < 0x06 0x01 0x04 >;
			label = "User LD6";
		};
	};

	gpio_keys {
		compatible = "gpio-keys";

		user_button: button {
			label = "User";
			gpios = < 0x05 0x00 0x04 >;
		};
	};
};
