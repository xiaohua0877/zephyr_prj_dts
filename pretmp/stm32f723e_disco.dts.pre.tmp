/dts-v1/;
/ {
 #address-cells = <1>;
 #size-cells = <1>;
 chosen { };
 aliases { };
};
/ {
 soc {
  #address-cells = <1>;
  #size-cells = <1>;
  compatible = "simple-bus";
  interrupt-parent = <&nvic>;
  ranges;
  nvic: interrupt-controller@e000e100 {
   compatible = "arm,v7m-nvic";
   reg = <0xe000e100 0xc00>;
   interrupt-controller;
   #interrupt-cells = <2>;
  };
  systick: timer@e000e010 {
   compatible = "arm,armv7m-systick";
   reg = <0xe000e010 0x10>;
   status = "disabled";
  };
 };
};
/ {
 soc {
  pinctrl: pin-controller@40020000 {
   usart1_pins_a: usart1_a {
    rx_tx {
     rx = <(1 << 4 | 7) ((7 | (0x2<<4)) | (0x0<<9))>;
     tx = <(1 << 4 | 6) ((7 | (0x2<<4)) | ((0x0<<6) | (0x0<<9)))>;
    };
   };
   usart1_pins_b: usart1_b {
    rx_tx {
     rx = <(0 << 4 | 10) ((7 | (0x2<<4)) | (0x0<<9))>;
     tx = <(0 << 4 | 9) ((7 | (0x2<<4)) | ((0x0<<6) | (0x0<<9)))>;
    };
   };
   usart2_pins_a: usart2_a {
    rx_tx {
     rx = <(0 << 4 | 3) ((7 | (0x2<<4)) | (0x0<<9))>;
     tx = <(0 << 4 | 2) ((7 | (0x2<<4)) | ((0x0<<6) | (0x0<<9)))>;
    };
   };
   usart2_pins_b: usart2_b {
    rx_tx {
     rx = <(3 << 4 | 6) ((7 | (0x2<<4)) | (0x0<<9))>;
     tx = <(3 << 4 | 5) ((7 | (0x2<<4)) | ((0x0<<6) | (0x0<<9)))>;
    };
   };
   usart3_pins_a: usart3_a {
    rx_tx {
     rx = <(1 << 4 | 11) ((7 | (0x2<<4)) | (0x0<<9))>;
     tx = <(1 << 4 | 10) ((7 | (0x2<<4)) | ((0x0<<6) | (0x0<<9)))>;
    };
   };
   usart3_pins_b: usart3_b {
    rx_tx {
     rx = <(3 << 4 | 9) ((7 | (0x2<<4)) | (0x0<<9))>;
     tx = <(3 << 4 | 8) ((7 | (0x2<<4)) | ((0x0<<6) | (0x0<<9)))>;
    };
   };
   usart3_pins_c: usart3_c {
    rx_tx {
     rx = <(2 << 4 | 11) ((7 | (0x2<<4)) | (0x0<<9))>;
     tx = <(2 << 4 | 10) ((7 | (0x2<<4)) | ((0x0<<6) | (0x0<<9)))>;
    };
   };
   uart4_pins_a: uart4_a {
    rx_tx {
     rx = <(0 << 4 | 1) ((8 | (0x2<<4)) | (0x0<<9))>;
     tx = <(0 << 4 | 0) ((8 | (0x2<<4)) | ((0x0<<6) | (0x0<<9)))>;
    };
   };
   uart4_pins_b: uart4_b {
    rx_tx {
     rx = <(2 << 4 | 11) ((8 | (0x2<<4)) | (0x0<<9))>;
     tx = <(2 << 4 | 10) ((8 | (0x2<<4)) | ((0x0<<6) | (0x0<<9)))>;
    };
   };
   uart5_pins_a: uart5_a {
    rx_tx {
     rx = <(3 << 4 | 2) ((8 | (0x2<<4)) | (0x0<<9))>;
     tx = <(2 << 4 | 12) ((8 | (0x2<<4)) | ((0x0<<6) | (0x0<<9)))>;
    };
   };
   usart6_pins_a: usart6_a {
    rx_tx {
     rx = <(2 << 4 | 7) ((8 | (0x2<<4)) | (0x0<<9))>;
     tx = <(2 << 4 | 6) ((8 | (0x2<<4)) | ((0x0<<6) | (0x0<<9)))>;
    };
   };
   usart6_pins_b: usart6_b {
    rx_tx {
     rx = <(6 << 4 | 9) ((8 | (0x2<<4)) | (0x0<<9))>;
     tx = <(6 << 4 | 14) ((8 | (0x2<<4)) | ((0x0<<6) | (0x0<<9)))>;
    };
   };
   uart7_pins_a: uart7_a {
    rx_tx {
     rx = <(4 << 4 | 7) ((8 | (0x2<<4)) | (0x0<<9))>;
     tx = <(4 << 4 | 8) ((8 | (0x2<<4)) | ((0x0<<6) | (0x0<<9)))>;
    };
   };
   uart7_pins_b: uart7_b {
    rx_tx {
     rx = <(5 << 4 | 6) ((8 | (0x2<<4)) | (0x0<<9))>;
     tx = <(5 << 4 | 7) ((8 | (0x2<<4)) | ((0x0<<6) | (0x0<<9)))>;
    };
   };
   uart8_pins_a: uart8_a {
    rx_tx {
     rx = <(4 << 4 | 0) ((8 | (0x2<<4)) | (0x0<<9))>;
     tx = <(4 << 4 | 1) ((8 | (0x2<<4)) | ((0x0<<6) | (0x0<<9)))>;
    };
   };
  };
 };
};
/ {
 cpus {
  #address-cells = <1>;
  #size-cells = <0>;
  cpu@0 {
   device_type = "cpu";
   compatible = "arm,cortex-m7";
   reg = <0>;
  };
 };
 sram0: memory@20000000 {
  device_type = "memory";
  compatible = "mmio-sram";
 };
 soc {
  flash-controller@40023c00 {
   compatible = "st,stm32f7-flash-controller";
   label = "FLASH_CTRL";
   reg = <0x40023c00 0x400>;
   interrupts = <4 0>;
   #address-cells = <1>;
   #size-cells = <1>;
   flash0: flash@8000000 {
    compatible = "soc-nv-flash";
    label = "FLASH_STM32";
    write-block-size = <1>;
   };
  };
  rcc: rcc@40023800 {
   compatible = "st,stm32-rcc";
   clocks-controller;
   #clock-cells = <2>;
   reg = <0x40023800 0x400>;
   label = "STM32_CLK_RCC";
  };
  pinctrl: pin-controller@40020000 {
   compatible = "st,stm32-pinmux";
   #address-cells = <1>;
   #size-cells = <1>;
   reg = <0x40020000 0x2400>;
   gpioa: gpio@40020000 {
    compatible = "st,stm32-gpio";
    gpio-controller;
    #gpio-cells = <2>;
    reg = <0x40020000 0x400>;
    clocks = <&rcc 0 0x00000001>;
    label = "GPIOA";
   };
   gpiob: gpio@40020400 {
    compatible = "st,stm32-gpio";
    gpio-controller;
    #gpio-cells = <2>;
    reg = <0x40020400 0x400>;
    clocks = <&rcc 0 0x00000002>;
    label = "GPIOB";
   };
   gpioc: gpio@40020800 {
    compatible = "st,stm32-gpio";
    gpio-controller;
    #gpio-cells = <2>;
    reg = <0x40020800 0x400>;
    clocks = <&rcc 0 0x00000004>;
    label = "GPIOC";
   };
   gpiod: gpio@40020C00 {
    compatible = "st,stm32-gpio";
    gpio-controller;
    #gpio-cells = <2>;
    reg = <0x40020C00 0x400>;
    clocks = <&rcc 0 0x00000008>;
    label = "GPIOD";
   };
   gpioe: gpio@40021000 {
    compatible = "st,stm32-gpio";
    gpio-controller;
    #gpio-cells = <2>;
    reg = <0x40021000 0x400>;
    clocks = <&rcc 0 0x00000010>;
    label = "GPIOE";
   };
   gpiof: gpio@40021400 {
    compatible = "st,stm32-gpio";
    gpio-controller;
    #gpio-cells = <2>;
    reg = <0x40021400 0x400>;
    clocks = <&rcc 0 0x00000020>;
    label = "GPIOF";
   };
   gpiog: gpio@40021800 {
    compatible = "st,stm32-gpio";
    gpio-controller;
    #gpio-cells = <2>;
    reg = <0x40021800 0x400>;
    clocks = <&rcc 0 0x00000040>;
    label = "GPIOG";
   };
   gpioh: gpio@40021C00 {
    compatible = "st,stm32-gpio";
    gpio-controller;
    #gpio-cells = <2>;
    reg = <0x40021C00 0x400>;
    clocks = <&rcc 0 0x00000080>;
    label = "GPIOH";
   };
   gpioi: gpio@40022000 {
    compatible = "st,stm32-gpio";
    gpio-controller;
    #gpio-cells = <2>;
    reg = <0x40022000 0x400>;
    clocks = <&rcc 0 0x00000100>;
    label = "GPIOI";
   };
  };
  idwg: watchdog@40003000 {
   compatible = "st,stm32-watchdog";
   reg = <0x40003000 0x400>;
   label = "IWDG";
   status = "disabled";
  };
  usart1: serial@40011000 {
   compatible = "st,stm32-usart", "st,stm32-uart";
   reg = <0x40011000 0x400>;
   clocks = <&rcc 3 0x00000010>;
   interrupts = <37 0>;
   status = "disabled";
   label = "UART_1";
  };
  usart2: serial@40004400 {
   compatible = "st,stm32-usart", "st,stm32-uart";
   reg = <0x40004400 0x400>;
   clocks = <&rcc 2 0x00020000>;
   interrupts = <38 0>;
   status = "disabled";
   label = "UART_2";
  };
  usart3: serial@40004800 {
   compatible = "st,stm32-usart", "st,stm32-uart";
   reg = <0x40004800 0x400>;
   clocks = <&rcc 2 0x00040000>;
   interrupts = <39 0>;
   status = "disabled";
   label = "UART_3";
  };
  uart4: serial@40004c00 {
   compatible ="st,stm32-uart";
   reg = <0x40004c00 0x400>;
   clocks = <&rcc 2 0x00080000>;
   interrupts = <52 0>;
   status = "disabled";
   label = "UART_4";
  };
  uart5: serial@40005000 {
   compatible = "st,stm32-uart";
   reg = <0x40005000 0x400>;
   clocks = <&rcc 2 0x00100000>;
   interrupts = <53 0>;
   status = "disabled";
   label = "UART_5";
  };
  usart6: serial@40011400 {
   compatible = "st,stm32-usart", "st,stm32-uart";
   reg = <0x40011400 0x400>;
   clocks = <&rcc 3 0x00000020>;
   interrupts = <71 0>;
   status = "disabled";
   label = "UART_6";
  };
  uart7: serial@40007800 {
   compatible = "st,stm32-uart";
   reg = <0x40007800 0x400>;
   clocks = <&rcc 2 0x40000000>;
   interrupts = <82 0>;
   status = "disabled";
   label = "UART_7";
  };
  uart8: serial@40007c00 {
   compatible = "st,stm32-uart";
   reg = <0x40007c00 0x400>;
   clocks = <&rcc 2 0x80000000>;
   interrupts = <83 0>;
   status = "disabled";
   label = "UART_8";
  };
  i2c1: i2c@40005400 {
   compatible = "st,stm32-i2c-v2";
   clock-frequency = <100000>;
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x40005400 0x400>;
   clocks = <&rcc 2 0x00200000>;
   interrupts = <31 0>, <32 0>;
   interrupt-names = "event", "error";
   status = "disabled";
   label = "I2C_1";
  };
  i2c2: i2c@40005800 {
   compatible = "st,stm32-i2c-v2";
   clock-frequency = <100000>;
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x40005800 0x400>;
   clocks = <&rcc 2 0x00400000>;
   interrupts = <33 0>, <34 0>;
   interrupt-names = "event", "error";
   status = "disabled";
   label = "I2C_2";
  };
  i2c3: i2c@40005c00 {
   compatible = "st,stm32-i2c-v2";
   clock-frequency = <100000>;
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x40005c00 0x400>;
   clocks = <&rcc 2 0x00800000>;
   interrupts = <72 0>, <73 0>;
   interrupt-names = "event", "error";
   status = "disabled";
   label = "I2C_3";
  };
  spi1: spi@40013000 {
   compatible = "st,stm32-spi";
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x40013000 0x400>;
   clocks = <&rcc 3 0x00001000>;
   interrupts = <35 5>;
   status = "disabled";
   label = "SPI_1";
  };
  spi2: spi@40003800 {
   compatible = "st,stm32-spi";
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x40003800 0x400>;
   clocks = <&rcc 2 0x00004000>;
   interrupts = <36 5>;
   status = "disabled";
   label = "SPI_2";
  };
  spi3: spi@40003c00 {
   compatible = "st,stm32-spi";
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x40003c00 0x400>;
   clocks = <&rcc 2 0x00008000>;
   interrupts = <51 5>;
   status = "disabled";
   label = "SPI_3";
  };
  spi4: spi@40013400 {
   compatible = "st,stm32-spi";
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x40013400 0x400>;
   clocks = <&rcc 3 0x00002000>;
   interrupts = <84 5>;
   status = "disabled";
   label = "SPI_4";
  };
  spi5: spi@40015000 {
   compatible = "st,stm32-spi";
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x40015000 0x400>;
   clocks = <&rcc 3 0x00100000>;
   interrupts = <85 5>;
   status = "disabled";
   label = "SPI_5";
  };
  spi6: spi@40015400 {
   compatible = "st,stm32-spi";
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x40015400 0x400>;
   clocks = <&rcc 3 0x00200000>;
   interrupts = <86 5>;
   status = "disabled";
   label = "SPI_6";
  };
  timers1: timers@40010000 {
   compatible = "st,stm32-timers";
   reg = <0x40010000 0x400>;
   clocks = <&rcc 3 0x00000001>;
   status = "disabled";
   label = "TIMERS_1";
   pwm {
    compatible = "st,stm32-pwm";
    status = "disabled";
    st,prescaler = <10000>;
    label = "PWM_1";
    #pwm-cells = <2>;
   };
  };
  timers2: timers@40000000 {
   compatible = "st,stm32-timers";
   reg = <0x40000000 0x400>;
   clocks = <&rcc 2 0x00000001>;
   status = "disabled";
   label = "TIMERS_2";
   pwm {
    compatible = "st,stm32-pwm";
    status = "disabled";
    st,prescaler = <0>;
    label = "PWM_2";
    #pwm-cells = <2>;
   };
  };
  timers3: timers@40000400 {
   compatible = "st,stm32-timers";
   reg = <0x40000400 0x400>;
   clocks = <&rcc 2 0x00000002>;
   status = "disabled";
   label = "TIMERS_3";
   pwm {
    compatible = "st,stm32-pwm";
    status = "disabled";
    st,prescaler = <10000>;
    label = "PWM_3";
    #pwm-cells = <2>;
   };
  };
  timers4: timers@40000800 {
   compatible = "st,stm32-timers";
   reg = <0x40000800 0x400>;
   clocks = <&rcc 2 0x00000004>;
   status = "disabled";
   label = "TIMERS_4";
   pwm {
    compatible = "st,stm32-pwm";
    status = "disabled";
    st,prescaler = <10000>;
    label = "PWM_4";
    #pwm-cells = <2>;
   };
  };
  timers5: timers@40000c00 {
   compatible = "st,stm32-timers";
   reg = <0x40000c00 0x400>;
   clocks = <&rcc 2 0x00000008>;
   status = "disabled";
   label = "TIMERS_5";
   pwm {
    compatible = "st,stm32-pwm";
    status = "disabled";
    st,prescaler = <0>;
    label = "PWM_5";
    #pwm-cells = <2>;
   };
  };
  timers6: timers@40001000 {
   compatible = "st,stm32-timers";
   reg = <0x40001000 0x400>;
   clocks = <&rcc 2 0x00000010>;
   status = "disabled";
   label = "TIMERS_6";
   pwm {
    compatible = "st,stm32-pwm";
    status = "disabled";
    st,prescaler = <10000>;
    label = "PWM_6";
    #pwm-cells = <2>;
   };
  };
  timers7: timers@40001400 {
   compatible = "st,stm32-timers";
   reg = <0x40001400 0x400>;
   clocks = <&rcc 2 0x00000020>;
   status = "disabled";
   label = "TIMERS_7";
   pwm {
    compatible = "st,stm32-pwm";
    status = "disabled";
    st,prescaler = <10000>;
    label = "PWM_7";
    #pwm-cells = <2>;
   };
  };
  timers8: timers@40010400 {
   compatible = "st,stm32-timers";
   reg = <0x40010400 0x400>;
   clocks = <&rcc 3 0x00000002>;
   status = "disabled";
   label = "TIMERS_8";
   pwm {
    compatible = "st,stm32-pwm";
    status = "disabled";
    st,prescaler = <10000>;
    label = "PWM_8";
    #pwm-cells = <2>;
   };
  };
  timers9: timers@40014000 {
   compatible = "st,stm32-timers";
   reg = <0x40014000 0x400>;
   clocks = <&rcc 3 0x00010000>;
   status = "disabled";
   label = "TIMERS_9";
   pwm {
    compatible = "st,stm32-pwm";
    status = "disabled";
    st,prescaler = <10000>;
    label = "PWM_9";
    #pwm-cells = <2>;
   };
  };
  timers10: timers@40014400 {
   compatible = "st,stm32-timers";
   reg = <0x40014400 0x400>;
   clocks = <&rcc 3 0x00020000>;
   status = "disabled";
   label = "TIMERS_10";
   pwm {
    compatible = "st,stm32-pwm";
    status = "disabled";
    st,prescaler = <10000>;
    label = "PWM_10";
    #pwm-cells = <2>;
   };
  };
  timers11: timers@40014800 {
   compatible = "st,stm32-timers";
   reg = <0x40014800 0x400>;
   clocks = <&rcc 3 0x00040000>;
   status = "disabled";
   label = "TIMERS_11";
   pwm {
    compatible = "st,stm32-pwm";
    status = "disabled";
    st,prescaler = <10000>;
    label = "PWM_11";
    #pwm-cells = <2>;
   };
  };
  timers12: timers@40001800 {
   compatible = "st,stm32-timers";
   reg = <0x40001800 0x400>;
   clocks = <&rcc 2 0x00000040>;
   status = "disabled";
   label = "TIMERS_12";
   pwm {
    compatible = "st,stm32-pwm";
    status = "disabled";
    st,prescaler = <10000>;
    label = "PWM_12";
    #pwm-cells = <2>;
   };
  };
  timers13: timers@40001c00 {
   compatible = "st,stm32-timers";
   reg = <0x40001c00 0x400>;
   clocks = <&rcc 2 0x00000080>;
   status = "disabled";
   label = "TIMERS_13";
   pwm {
    compatible = "st,stm32-pwm";
    status = "disabled";
    st,prescaler = <10000>;
    label = "PWM_13";
    #pwm-cells = <2>;
   };
  };
  timers14: timers@40002000 {
   compatible = "st,stm32-timers";
   reg = <0x40002000 0x400>;
   clocks = <&rcc 2 0x00000100>;
   status = "disabled";
   label = "TIMERS_14";
   pwm {
    compatible = "st,stm32-pwm";
    status = "disabled";
    st,prescaler = <10000>;
    label = "PWM_14";
    #pwm-cells = <2>;
   };
  };
  usbotg_fs: usb@50000000 {
   compatible = "st,stm32-otgfs";
   reg = <0x50000000 0x40000>;
   interrupts = <67 0>;
   interrupt-names = "otgfs";
   num-bidir-endpoints = <6>;
   ram-size = <1280>;
   maximum-speed = "full-speed";
   phys = <&otgfs_phy>;
   status = "disabled";
   label = "OTGFS";
  };
  usbotg_hs: usb@40040000 {
   compatible = "st,stm32-otghs", "st,stm32-otgfs";
   reg = <0x40040000 0x40000>;
   interrupts = <77 0>, <74 0>, <75 0>;
   interrupt-names = "otghs", "ep1_out", "ep1_in";
   num-bidir-endpoints = <9>;
   ram-size = <4096>;
   maximum-speed = "full-speed";
   phys = <&otghs_fs_phy>;
   status = "disabled";
   label= "OTGHS";
  };
  rtc: rtc@40002800 {
   compatible = "st,stm32-rtc";
   reg = <0x40002800 0x300>;
   interrupts = <41 0>;
   clocks = <&rcc 2 0x10000000>;
   prescaler = <32768>;
   status = "disabled";
   label = "RTC_0";
  };
 };
 otghs_fs_phy: otghs_fs_phy {
  compatible = "usb-nop-xceiv";
  #phy-cells = <0>;
  label = "OTGHS_FS_PHY";
 };
 otgfs_phy: otgfs_phy {
  compatible = "usb-nop-xceiv";
  #phy-cells = <0>;
  label = "OTGFS_PHY";
 };
};
&nvic {
 arm,num-irq-priority-bits = <4>;
};
/ {
 soc {
  usbphyc: usbphyc@40017c00 {
   compatible = "st,stm32-usbphyc";
   reg = <0x40017c00 0x400>;
   #phy-cells = <0>;
   label = "USBPHYC";
  };
  usbotg_hs: usb@40040000 {
   phys = <&usbphyc>;
   maximum-speed = "high-speed";
  };
 };
};
/delete-node/ &otghs_fs_phy;
/ {
 sram0: memory@20000000 {
  reg = <0x20000000 ((256) * 1024)>;
 };
 soc {
  flash-controller@40023c00 {
   flash0: flash@8000000 {
    reg = <0x08000000 ((512) * 1024)>;
   };
  };
 };
};
/ {
 model = "STMicroelectronics STM32F723E DISCOVERY board";
 compatible = "st,stm32f723e-disco", "st,stm32f723";
 chosen {
  zephyr,console = &usart6;
  zephyr,shell-uart = &usart6;
  zephyr,sram = &sram0;
  zephyr,flash = &flash0;
 };
 leds {
  compatible = "gpio-leds";
  blue_led: led_1 {
   gpios = <&gpioa 5 (1 << 2)>;
   label = "User LD1";
  };
  red_led: led_2 {
   gpios = <&gpioa 7 (1 << 2)>;
   label = "User LD5";
  };
  green_led: led_3 {
   gpios = <&gpiob 1 (1 << 2)>;
   label = "User LD6";
  };
 };
 gpio_keys {
  compatible = "gpio-keys";
  user_button: button {
   label = "User";
   gpios = <&gpioa 0 (1 << 2)>;
  };
 };
 aliases {
  led0 = &blue_led;
  led1 = &red_led;
  led2 = &green_led;
  sw0 = &user_button;
 };
};
arduino_i2c: &i2c2 {};
arduino_spi: &spi1 {};
arduino_serial: &usart2 {};
&usart2 {
 current-speed = <115200>;
 pinctrl-names = "default";
 status = "ok";
};
&usart6 {
 current-speed = <115200>;
 pinctrl-names = "default";
 status = "ok";
};
&i2c1 {
 status = "ok";
};
&i2c2 {
 status = "ok";
};
&i2c3 {
 status = "ok";
};
&spi1 {
 status = "ok";
};
&usbotg_fs {
 status = "ok";
};
